Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AUTO
    BREAK
    CASE
    CLASS
    CONST
    CONTINUE
    DEFAULT
    DELETE
    DO
    DOUBLE
    ENUM
    EXTERN
    FALSE
    FOR
    FRIEND
    GOTO
    INLINE
    LONG
    MAIN
    NAMESPACE
    NEW
    NOT
    OPERATOR
    OR
    PUBLIC
    REGISTER
    RETURN
    SHORT
    SIGNED
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    TEMPLATE
    TRUE
    TYPEDEF
    UNION
    UNSIGNED
    USING
    VOID
    VOLATILE

Grammar

Rule 0     S' -> program
Rule 1     program -> decl_list stmt_list
Rule 2     decl_list -> decl_list declaration
Rule 3     decl_list -> <empty>
Rule 4     declaration -> type_specifier ID SEMI
Rule 5     type_specifier -> INT
Rule 6     type_specifier -> FLOAT
Rule 7     type_specifier -> BOOL
Rule 8     type_specifier -> CHAR
Rule 9     type_specifier -> STRING
Rule 10    stmt_list -> stmt_list statement
Rule 11    stmt_list -> statement
Rule 12    statement -> assignment
Rule 13    statement -> expression SEMI
Rule 14    statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 15    statement -> IF LPAREN expression RPAREN statement
Rule 16    statement -> WHILE LPAREN expression RPAREN statement
Rule 17    statement -> LBRACE stmt_list RBRACE
Rule 18    assignment -> ID ASSIGN expression SEMI
Rule 19    expression -> expression PLUS term
Rule 20    expression -> expression MINUS term
Rule 21    expression -> term
Rule 22    term -> term TIMES factor
Rule 23    term -> term DIVIDE factor
Rule 24    term -> factor
Rule 25    factor -> NUMBER
Rule 26    factor -> ID
Rule 27    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 18
AUTO                 : 
BOOL                 : 7
BREAK                : 
CASE                 : 
CHAR                 : 8
CLASS                : 
CONST                : 
CONTINUE             : 
DEFAULT              : 
DELETE               : 
DIVIDE               : 23
DO                   : 
DOUBLE               : 
ELSE                 : 14
ENUM                 : 
EXTERN               : 
FALSE                : 
FLOAT                : 6
FOR                  : 
FRIEND               : 
GOTO                 : 
ID                   : 4 18 26
IF                   : 14 15
INLINE               : 
INT                  : 5
LBRACE               : 17
LONG                 : 
LPAREN               : 14 15 16 27
MAIN                 : 
MINUS                : 20
NAMESPACE            : 
NEW                  : 
NOT                  : 
NUMBER               : 25
OPERATOR             : 
OR                   : 
PLUS                 : 19
PUBLIC               : 
RBRACE               : 17
REGISTER             : 
RETURN               : 
RPAREN               : 14 15 16 27
SEMI                 : 4 13 18
SHORT                : 
SIGNED               : 
SIZEOF               : 
STATIC               : 
STRING               : 9
STRUCT               : 
SWITCH               : 
TEMPLATE             : 
TIMES                : 22
TRUE                 : 
TYPEDEF              : 
UNION                : 
UNSIGNED             : 
USING                : 
VOID                 : 
VOLATILE             : 
WHILE                : 16
error                : 

Nonterminals, with rules where they appear

assignment           : 12
decl_list            : 1 2
declaration          : 2
expression           : 13 14 15 16 18 19 20 27
factor               : 22 23 24
program              : 0
statement            : 10 11 14 14 15 16
stmt_list            : 1 10 17
term                 : 19 20 21 22 23
type_specifier       : 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . decl_list stmt_list
    (2) decl_list -> . decl_list declaration
    (3) decl_list -> .

    IF              reduce using rule 3 (decl_list -> .)
    WHILE           reduce using rule 3 (decl_list -> .)
    LBRACE          reduce using rule 3 (decl_list -> .)
    INT             reduce using rule 3 (decl_list -> .)
    FLOAT           reduce using rule 3 (decl_list -> .)
    BOOL            reduce using rule 3 (decl_list -> .)
    CHAR            reduce using rule 3 (decl_list -> .)
    STRING          reduce using rule 3 (decl_list -> .)
    ID              reduce using rule 3 (decl_list -> .)
    NUMBER          reduce using rule 3 (decl_list -> .)
    LPAREN          reduce using rule 3 (decl_list -> .)

    program                        shift and go to state 1
    decl_list                      shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> decl_list . stmt_list
    (2) decl_list -> decl_list . declaration
    (10) stmt_list -> . stmt_list statement
    (11) stmt_list -> . statement
    (4) declaration -> . type_specifier ID SEMI
    (12) statement -> . assignment
    (13) statement -> . expression SEMI
    (14) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (15) statement -> . IF LPAREN expression RPAREN statement
    (16) statement -> . WHILE LPAREN expression RPAREN statement
    (17) statement -> . LBRACE stmt_list RBRACE
    (5) type_specifier -> . INT
    (6) type_specifier -> . FLOAT
    (7) type_specifier -> . BOOL
    (8) type_specifier -> . CHAR
    (9) type_specifier -> . STRING
    (18) assignment -> . ID ASSIGN expression SEMI
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    BOOL            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 7
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 11

    stmt_list                      shift and go to state 3
    declaration                    shift and go to state 4
    statement                      shift and go to state 5
    type_specifier                 shift and go to state 6
    assignment                     shift and go to state 8
    expression                     shift and go to state 9
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 3

    (1) program -> decl_list stmt_list .
    (10) stmt_list -> stmt_list . statement
    (12) statement -> . assignment
    (13) statement -> . expression SEMI
    (14) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (15) statement -> . IF LPAREN expression RPAREN statement
    (16) statement -> . WHILE LPAREN expression RPAREN statement
    (17) statement -> . LBRACE stmt_list RBRACE
    (18) assignment -> . ID ASSIGN expression SEMI
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    $end            reduce using rule 1 (program -> decl_list stmt_list .)
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    ID              shift and go to state 7
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 11

    statement                      shift and go to state 22
    assignment                     shift and go to state 8
    expression                     shift and go to state 9
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 4

    (2) decl_list -> decl_list declaration .

    IF              reduce using rule 2 (decl_list -> decl_list declaration .)
    WHILE           reduce using rule 2 (decl_list -> decl_list declaration .)
    LBRACE          reduce using rule 2 (decl_list -> decl_list declaration .)
    INT             reduce using rule 2 (decl_list -> decl_list declaration .)
    FLOAT           reduce using rule 2 (decl_list -> decl_list declaration .)
    BOOL            reduce using rule 2 (decl_list -> decl_list declaration .)
    CHAR            reduce using rule 2 (decl_list -> decl_list declaration .)
    STRING          reduce using rule 2 (decl_list -> decl_list declaration .)
    ID              reduce using rule 2 (decl_list -> decl_list declaration .)
    NUMBER          reduce using rule 2 (decl_list -> decl_list declaration .)
    LPAREN          reduce using rule 2 (decl_list -> decl_list declaration .)


state 5

    (11) stmt_list -> statement .

    IF              reduce using rule 11 (stmt_list -> statement .)
    WHILE           reduce using rule 11 (stmt_list -> statement .)
    LBRACE          reduce using rule 11 (stmt_list -> statement .)
    ID              reduce using rule 11 (stmt_list -> statement .)
    NUMBER          reduce using rule 11 (stmt_list -> statement .)
    LPAREN          reduce using rule 11 (stmt_list -> statement .)
    $end            reduce using rule 11 (stmt_list -> statement .)
    RBRACE          reduce using rule 11 (stmt_list -> statement .)


state 6

    (4) declaration -> type_specifier . ID SEMI

    ID              shift and go to state 23


state 7

    (18) assignment -> ID . ASSIGN expression SEMI
    (26) factor -> ID .

    ASSIGN          shift and go to state 24
    TIMES           reduce using rule 26 (factor -> ID .)
    DIVIDE          reduce using rule 26 (factor -> ID .)
    SEMI            reduce using rule 26 (factor -> ID .)
    PLUS            reduce using rule 26 (factor -> ID .)
    MINUS           reduce using rule 26 (factor -> ID .)


state 8

    (12) statement -> assignment .

    IF              reduce using rule 12 (statement -> assignment .)
    WHILE           reduce using rule 12 (statement -> assignment .)
    LBRACE          reduce using rule 12 (statement -> assignment .)
    ID              reduce using rule 12 (statement -> assignment .)
    NUMBER          reduce using rule 12 (statement -> assignment .)
    LPAREN          reduce using rule 12 (statement -> assignment .)
    $end            reduce using rule 12 (statement -> assignment .)
    RBRACE          reduce using rule 12 (statement -> assignment .)
    ELSE            reduce using rule 12 (statement -> assignment .)


state 9

    (13) statement -> expression . SEMI
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    SEMI            shift and go to state 25
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27


state 10

    (14) statement -> IF . LPAREN expression RPAREN statement ELSE statement
    (15) statement -> IF . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 28


state 11

    (27) factor -> LPAREN . expression RPAREN
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 21
    ID              shift and go to state 30
    LPAREN          shift and go to state 11

    expression                     shift and go to state 29
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 12

    (16) statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 31


state 13

    (17) statement -> LBRACE . stmt_list RBRACE
    (10) stmt_list -> . stmt_list statement
    (11) stmt_list -> . statement
    (12) statement -> . assignment
    (13) statement -> . expression SEMI
    (14) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (15) statement -> . IF LPAREN expression RPAREN statement
    (16) statement -> . WHILE LPAREN expression RPAREN statement
    (17) statement -> . LBRACE stmt_list RBRACE
    (18) assignment -> . ID ASSIGN expression SEMI
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    ID              shift and go to state 7
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 11

    stmt_list                      shift and go to state 32
    statement                      shift and go to state 5
    assignment                     shift and go to state 8
    expression                     shift and go to state 9
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 14

    (5) type_specifier -> INT .

    ID              reduce using rule 5 (type_specifier -> INT .)


state 15

    (6) type_specifier -> FLOAT .

    ID              reduce using rule 6 (type_specifier -> FLOAT .)


state 16

    (7) type_specifier -> BOOL .

    ID              reduce using rule 7 (type_specifier -> BOOL .)


state 17

    (8) type_specifier -> CHAR .

    ID              reduce using rule 8 (type_specifier -> CHAR .)


state 18

    (9) type_specifier -> STRING .

    ID              reduce using rule 9 (type_specifier -> STRING .)


state 19

    (21) expression -> term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMI            reduce using rule 21 (expression -> term .)
    PLUS            reduce using rule 21 (expression -> term .)
    MINUS           reduce using rule 21 (expression -> term .)
    RPAREN          reduce using rule 21 (expression -> term .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34


state 20

    (24) term -> factor .

    TIMES           reduce using rule 24 (term -> factor .)
    DIVIDE          reduce using rule 24 (term -> factor .)
    SEMI            reduce using rule 24 (term -> factor .)
    PLUS            reduce using rule 24 (term -> factor .)
    MINUS           reduce using rule 24 (term -> factor .)
    RPAREN          reduce using rule 24 (term -> factor .)


state 21

    (25) factor -> NUMBER .

    TIMES           reduce using rule 25 (factor -> NUMBER .)
    DIVIDE          reduce using rule 25 (factor -> NUMBER .)
    SEMI            reduce using rule 25 (factor -> NUMBER .)
    PLUS            reduce using rule 25 (factor -> NUMBER .)
    MINUS           reduce using rule 25 (factor -> NUMBER .)
    RPAREN          reduce using rule 25 (factor -> NUMBER .)


state 22

    (10) stmt_list -> stmt_list statement .

    IF              reduce using rule 10 (stmt_list -> stmt_list statement .)
    WHILE           reduce using rule 10 (stmt_list -> stmt_list statement .)
    LBRACE          reduce using rule 10 (stmt_list -> stmt_list statement .)
    ID              reduce using rule 10 (stmt_list -> stmt_list statement .)
    NUMBER          reduce using rule 10 (stmt_list -> stmt_list statement .)
    LPAREN          reduce using rule 10 (stmt_list -> stmt_list statement .)
    $end            reduce using rule 10 (stmt_list -> stmt_list statement .)
    RBRACE          reduce using rule 10 (stmt_list -> stmt_list statement .)


state 23

    (4) declaration -> type_specifier ID . SEMI

    SEMI            shift and go to state 35


state 24

    (18) assignment -> ID ASSIGN . expression SEMI
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 21
    ID              shift and go to state 30
    LPAREN          shift and go to state 11

    expression                     shift and go to state 36
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 25

    (13) statement -> expression SEMI .

    IF              reduce using rule 13 (statement -> expression SEMI .)
    WHILE           reduce using rule 13 (statement -> expression SEMI .)
    LBRACE          reduce using rule 13 (statement -> expression SEMI .)
    ID              reduce using rule 13 (statement -> expression SEMI .)
    NUMBER          reduce using rule 13 (statement -> expression SEMI .)
    LPAREN          reduce using rule 13 (statement -> expression SEMI .)
    $end            reduce using rule 13 (statement -> expression SEMI .)
    RBRACE          reduce using rule 13 (statement -> expression SEMI .)
    ELSE            reduce using rule 13 (statement -> expression SEMI .)


state 26

    (19) expression -> expression PLUS . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 21
    ID              shift and go to state 30
    LPAREN          shift and go to state 11

    term                           shift and go to state 37
    factor                         shift and go to state 20

state 27

    (20) expression -> expression MINUS . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 21
    ID              shift and go to state 30
    LPAREN          shift and go to state 11

    term                           shift and go to state 38
    factor                         shift and go to state 20

state 28

    (14) statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (15) statement -> IF LPAREN . expression RPAREN statement
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 21
    ID              shift and go to state 30
    LPAREN          shift and go to state 11

    expression                     shift and go to state 39
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 29

    (27) factor -> LPAREN expression . RPAREN
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          shift and go to state 40
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27


state 30

    (26) factor -> ID .

    TIMES           reduce using rule 26 (factor -> ID .)
    DIVIDE          reduce using rule 26 (factor -> ID .)
    RPAREN          reduce using rule 26 (factor -> ID .)
    PLUS            reduce using rule 26 (factor -> ID .)
    MINUS           reduce using rule 26 (factor -> ID .)
    SEMI            reduce using rule 26 (factor -> ID .)


state 31

    (16) statement -> WHILE LPAREN . expression RPAREN statement
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 21
    ID              shift and go to state 30
    LPAREN          shift and go to state 11

    expression                     shift and go to state 41
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 32

    (17) statement -> LBRACE stmt_list . RBRACE
    (10) stmt_list -> stmt_list . statement
    (12) statement -> . assignment
    (13) statement -> . expression SEMI
    (14) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (15) statement -> . IF LPAREN expression RPAREN statement
    (16) statement -> . WHILE LPAREN expression RPAREN statement
    (17) statement -> . LBRACE stmt_list RBRACE
    (18) assignment -> . ID ASSIGN expression SEMI
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 42
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    ID              shift and go to state 7
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 11

    statement                      shift and go to state 22
    assignment                     shift and go to state 8
    expression                     shift and go to state 9
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 33

    (22) term -> term TIMES . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 21
    ID              shift and go to state 30
    LPAREN          shift and go to state 11

    factor                         shift and go to state 43

state 34

    (23) term -> term DIVIDE . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 21
    ID              shift and go to state 30
    LPAREN          shift and go to state 11

    factor                         shift and go to state 44

state 35

    (4) declaration -> type_specifier ID SEMI .

    IF              reduce using rule 4 (declaration -> type_specifier ID SEMI .)
    WHILE           reduce using rule 4 (declaration -> type_specifier ID SEMI .)
    LBRACE          reduce using rule 4 (declaration -> type_specifier ID SEMI .)
    INT             reduce using rule 4 (declaration -> type_specifier ID SEMI .)
    FLOAT           reduce using rule 4 (declaration -> type_specifier ID SEMI .)
    BOOL            reduce using rule 4 (declaration -> type_specifier ID SEMI .)
    CHAR            reduce using rule 4 (declaration -> type_specifier ID SEMI .)
    STRING          reduce using rule 4 (declaration -> type_specifier ID SEMI .)
    ID              reduce using rule 4 (declaration -> type_specifier ID SEMI .)
    NUMBER          reduce using rule 4 (declaration -> type_specifier ID SEMI .)
    LPAREN          reduce using rule 4 (declaration -> type_specifier ID SEMI .)


state 36

    (18) assignment -> ID ASSIGN expression . SEMI
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    SEMI            shift and go to state 45
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27


state 37

    (19) expression -> expression PLUS term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMI            reduce using rule 19 (expression -> expression PLUS term .)
    PLUS            reduce using rule 19 (expression -> expression PLUS term .)
    MINUS           reduce using rule 19 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 19 (expression -> expression PLUS term .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34


state 38

    (20) expression -> expression MINUS term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    SEMI            reduce using rule 20 (expression -> expression MINUS term .)
    PLUS            reduce using rule 20 (expression -> expression MINUS term .)
    MINUS           reduce using rule 20 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 20 (expression -> expression MINUS term .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34


state 39

    (14) statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (15) statement -> IF LPAREN expression . RPAREN statement
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          shift and go to state 46
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27


state 40

    (27) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 27 (factor -> LPAREN expression RPAREN .)


state 41

    (16) statement -> WHILE LPAREN expression . RPAREN statement
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          shift and go to state 47
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27


state 42

    (17) statement -> LBRACE stmt_list RBRACE .

    IF              reduce using rule 17 (statement -> LBRACE stmt_list RBRACE .)
    WHILE           reduce using rule 17 (statement -> LBRACE stmt_list RBRACE .)
    LBRACE          reduce using rule 17 (statement -> LBRACE stmt_list RBRACE .)
    ID              reduce using rule 17 (statement -> LBRACE stmt_list RBRACE .)
    NUMBER          reduce using rule 17 (statement -> LBRACE stmt_list RBRACE .)
    LPAREN          reduce using rule 17 (statement -> LBRACE stmt_list RBRACE .)
    $end            reduce using rule 17 (statement -> LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 17 (statement -> LBRACE stmt_list RBRACE .)
    ELSE            reduce using rule 17 (statement -> LBRACE stmt_list RBRACE .)


state 43

    (22) term -> term TIMES factor .

    TIMES           reduce using rule 22 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 22 (term -> term TIMES factor .)
    SEMI            reduce using rule 22 (term -> term TIMES factor .)
    PLUS            reduce using rule 22 (term -> term TIMES factor .)
    MINUS           reduce using rule 22 (term -> term TIMES factor .)
    RPAREN          reduce using rule 22 (term -> term TIMES factor .)


state 44

    (23) term -> term DIVIDE factor .

    TIMES           reduce using rule 23 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 23 (term -> term DIVIDE factor .)
    SEMI            reduce using rule 23 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 23 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 23 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 23 (term -> term DIVIDE factor .)


state 45

    (18) assignment -> ID ASSIGN expression SEMI .

    IF              reduce using rule 18 (assignment -> ID ASSIGN expression SEMI .)
    WHILE           reduce using rule 18 (assignment -> ID ASSIGN expression SEMI .)
    LBRACE          reduce using rule 18 (assignment -> ID ASSIGN expression SEMI .)
    ID              reduce using rule 18 (assignment -> ID ASSIGN expression SEMI .)
    NUMBER          reduce using rule 18 (assignment -> ID ASSIGN expression SEMI .)
    LPAREN          reduce using rule 18 (assignment -> ID ASSIGN expression SEMI .)
    $end            reduce using rule 18 (assignment -> ID ASSIGN expression SEMI .)
    RBRACE          reduce using rule 18 (assignment -> ID ASSIGN expression SEMI .)
    ELSE            reduce using rule 18 (assignment -> ID ASSIGN expression SEMI .)


state 46

    (14) statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (15) statement -> IF LPAREN expression RPAREN . statement
    (12) statement -> . assignment
    (13) statement -> . expression SEMI
    (14) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (15) statement -> . IF LPAREN expression RPAREN statement
    (16) statement -> . WHILE LPAREN expression RPAREN statement
    (17) statement -> . LBRACE stmt_list RBRACE
    (18) assignment -> . ID ASSIGN expression SEMI
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    ID              shift and go to state 7
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 11

    expression                     shift and go to state 9
    statement                      shift and go to state 48
    assignment                     shift and go to state 8
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 47

    (16) statement -> WHILE LPAREN expression RPAREN . statement
    (12) statement -> . assignment
    (13) statement -> . expression SEMI
    (14) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (15) statement -> . IF LPAREN expression RPAREN statement
    (16) statement -> . WHILE LPAREN expression RPAREN statement
    (17) statement -> . LBRACE stmt_list RBRACE
    (18) assignment -> . ID ASSIGN expression SEMI
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    ID              shift and go to state 7
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 11

    expression                     shift and go to state 9
    statement                      shift and go to state 49
    assignment                     shift and go to state 8
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 48

    (14) statement -> IF LPAREN expression RPAREN statement . ELSE statement
    (15) statement -> IF LPAREN expression RPAREN statement .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 50
    IF              reduce using rule 15 (statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 15 (statement -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 15 (statement -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 15 (statement -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 15 (statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 15 (statement -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 15 (statement -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 15 (statement -> IF LPAREN expression RPAREN statement .)

  ! ELSE            [ reduce using rule 15 (statement -> IF LPAREN expression RPAREN statement .) ]


state 49

    (16) statement -> WHILE LPAREN expression RPAREN statement .

    IF              reduce using rule 16 (statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 16 (statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 16 (statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 16 (statement -> WHILE LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 16 (statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 16 (statement -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 16 (statement -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 16 (statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 16 (statement -> WHILE LPAREN expression RPAREN statement .)


state 50

    (14) statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (12) statement -> . assignment
    (13) statement -> . expression SEMI
    (14) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (15) statement -> . IF LPAREN expression RPAREN statement
    (16) statement -> . WHILE LPAREN expression RPAREN statement
    (17) statement -> . LBRACE stmt_list RBRACE
    (18) assignment -> . ID ASSIGN expression SEMI
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    ID              shift and go to state 7
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 11

    expression                     shift and go to state 9
    statement                      shift and go to state 51
    assignment                     shift and go to state 8
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 51

    (14) statement -> IF LPAREN expression RPAREN statement ELSE statement .

    IF              reduce using rule 14 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 14 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 14 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 14 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 14 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 14 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 14 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 14 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 14 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 48 resolved as shift
